name: Build and Release

on:
  push:
    tags:
      - 'v*'           # run on version tags like v1.2.3

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt || true

      - name: Build executable
        run: |
          pyinstaller --noconsole --onedir --name arcady main.py   # dist/arcady or dist/arcady.app

      - name: Add .app to release folder
        if: ${{ runner.os == 'macOS' }}
        shell: bash
        run: |
          set -e
          mkdir -p release
          (cd dist && zip -r -y ../release/arcady-macos.zip arcady.app)

      - name: Add folder with the executable to release folder
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: |
          $Release = 'release'
          New-Item -ItemType Directory -Force -Path $Release | Out-Null
          Compress-Archive -Path 'dist/arcady' `
                          -DestinationPath "$Release/arcady-windows.zip" `
                          -CompressionLevel Optimal -Force      # includes the arcady/ dir

      - name: Add folder with the executable to release folder
        if: ${{ runner.os == 'Linux' }}
        shell: bash
        run: |
          set -e
          mkdir -p release
          (cd dist && zip -r -y ../release/arcady-linux.zip arcady)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arcady-${{ matrix.os }}
          path: release/*.zip

  release:
    needs: build-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}